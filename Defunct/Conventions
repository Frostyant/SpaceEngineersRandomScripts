//Conventions//

//Dev Phases//
//<empty> = not started.
//code = making base code.
//debug = debugging in Space Engineers.
//ready = Ready.

//part = Some functionalities work.


//Ship ID//
//FUNCTIONID-MODELID-FACTORYID-UNITID
//FUNCTION ID's (2-3 letters) except : Contructors & Commanders
/*
Military Vessels

For combat vessels this is based on : https://www.quora.com/Whats-the-difference-between-a-cruiser-a-destroyer-a-frigate-and-a-littoral-combat-ship
SI = Space Infantry.
SDC = Space Domination Craft, Fighter. //part
ALC = Anti-Large Craft, Bomber. //part
PV = Patrol Vessel, gunboat, larger than bombers and fighters. usually an "small ship gone large". //part
COR = Corvette, Large Grid Combat Vessel, Never has heavy armor, relies on its small size and speed to survive and act. //part
FRI = Frigate, Large Grid Combat Vessel, posses some heavy armor but designed to be cost effective. //part
DES = Destroyer, Large Grid Combat Vessel, Armored, Main Combat Vessel, may posses torpedo's/missiles. //part
CRU = Cruiser, LARGE Grid Combat Vessel, Armored, Heavy Support, always posses torpedo's/missiles, only slightly bigger than DES //part

CAR = Carrier, Carries SDC's and ALC's, usually Detroyer Size, although can rangr from Frigate (Light) to Cruiser (Heavy) size.
STT = Space Troop Transport, Carries Space Infantry.
MLS = Mobile Logistics Support, carries energy & ammo.
CCV = Capital Command Vessel, commands PV's up to CRU's. //code
ACV = Assault Command Vessel, commands SI's up to PV's. //code



Stations

CCS = Central Command Station. //code-part
EXS = Extraction Station. (literally a battery, some Cargo, laser antenna, antenna & connector)
RFS = Refinery Station. //code-part
MAN = Manufactoring station. //code-part
SSF = Small Ship Factory (Civilian). //code-part
LSF = Large Ship Factory (Civilian). //code-part
AVF = Assault Vessel Factory, produces SI's up to PV's (Small Grids only). //code-part
CVF = Capital Vessel Factory, produces PV's upwards. //code-part
COM = Comms station. //ready
RES = Recharge Station.



Civilian Vessels

ITV = Inventory Transfer Vessel.
PKT = Packet Vessel.//part-debug
MIN = Mining Vessel.
CV<type> = Contructor Vessel,<type> is a placeholder for one of the stations//debug
RR = Ressource Reconnaissance. //debug
*/

//Order Types//
//ORDERS is Assumed to be of the form : Sender ID; Receiver ID; Order Type; other info 0; other info 1 etc... 
/*
"M" = Move here, other info 0 = position to move to //debug
"ML" = Move here AND Land (on planets), other info 0 = position to move to //part
"B" = Build ship (for shipyards of all types),() other info 0 = number of ships, other info 1 = type)
"S" = S, Saves info for future referencs (usefull for networks), other info 0 = Type of info (& location to store), other info 1 = info //ready
"MI" = Mine here, other info 0 = position around which to mine(, other info 1 = radius)
"T" = Transfer Items from point A to B, other info 0 = GPS of Point A, other info 1 = GPS of point B(, other info 2 = Items to Transfer)
"P" = Packet this message, other info 0 = Antenna to Send Packet to, other info 1 = Message to Packet (Use $ and % instead of ; and ,) //part
 A Packet is a Ship that goes from one "Network" of laser antennas to another physically carrying the message across distances.
 This Avoids having to create Antennas EVERYWHERE and is cost effective BUT slow
"D" = Deploy Satellite/Base At given location, other info 0 = Location Where to Deploy //debug
 "TM" = Transfer Message, Trasnfers Message to another antenna, other info 0 = message //part
 This is used if the Receiver ID is not that of this Ship
 "GR" = Give me Ressources, other info 0 = type of material(, other info 1 = amount)
 "GD" = Give me Drone, pther info 0 = type of drone
 "GI" = Give me info, other info 0 = type of info to give (typically GPS)(, other info 1 = object of info)
 "GO" = Give (potential) offer (returns confirmation & ressources to sender), other info 0 = type of ressources required, other info 1 = amount //NOTE GO refers to 2 DIFFERENT scripts depending on WHAT type of vessel you are (GetOfferAssembler & GetOfferRefinery)
 "NC" = New Commander, other info 0 = new commander ID, other info 1 = new commander GPS
 "RO" = Returning Offer
 "PS" = Ping Status, other info 0 = antenna position, other info 1 = status

 //EXCEPTION//
 "SM" = Send Message, where format is : GPS & message 

 //INTERNAL//
 //These are "orders" only applied INSIDE of a drone (ie not messages, although they could)
 //In Shipyard :
 "BITD" = Build Internal-Trade Demand (activates the module which asks local assemblers for their offer.)
 "BETD" = Build External-Trade Demand (activates the module which asks other swarms for their offer.)
 //In Assemblers/Refineries
 "VI" = Verify Inventory (Checks inventory, if non-empty asks for transfer ship & uses work queue to send it)


 

 //OUTDATED//
 "PO" = Potential offer (info), other info 0 = type of ressource offered, other info 1 = amount
*/



//Text Panels//
const string TXT_NAME = "info" ;
//Info Should be of the form : Ship ID $ Name of Laser Antenna 1 % Name of Laser Antenna 2 % ... $ Commander ID $ Commander GPS $ status
/*
MAY be one of the following :
CURRENT_COMMANDER_ID$CURRENT_COMMANDER_GPS //For Miners, Transfer ships, prospectors, packets, military vessels
ASSEMBLER_PRODUCTION$COST_IN[0]&COST_IN[1]&... //Shows ID number of component this assembler is producing  then its cost per unit, for Assemblers
*/
const string TXT_NAME = "message" ;
//Message is Assumed to be of the form : Sender ID; Receiver ID; Order Type; other info 0; other info 1 etc... 
const string TXT_NAME = "orders";
//This has to of the form : GPS coordinats ; message
// memory : 
/*
"comms_memory"
//Comms memory should be of format : Ship ID 01 , GPS of Ship ID 01 (, status) ; Ship ID 02 , GPS of Ship ID 02  (, status); etc...
"assembler_<int>_memory"
//This contains the memory of all assemblers which product the <int> ressource
//Should be of format : Ship ID 01, GPS of Ship ID 01;Ship ID 02, GPS of Ship ID 02 ;...
*/
const string TXT_NAME = "trigger";
//Format : GPS Location ; Trigger Timer ; Repeater Timer
const string TXT2_NAME = "work_queue";
//text panel 2 is a collection of infos in format from TXT1 separated by a "#"



//Remote Controls//
const string CNTRL_NAME = "cntrl"; 



//Timer Blocks//
//Named After their respective orders
//fo internal logic timer blocks :
/*
BTD : this will launch a script that will prepare the message to send demands to the trade hub
POS : this will launch the script preparing the messages to send the demands for the components
*/

//GPS Format//
GPS:antenna_name:X:Y:Z:

//Order of components//
/*
Bullet Proof Glass [0]
Computer[1]
Construction Component[2]
Detector Component[3]
Display[4]
Explosives[5]
Girder[6]
Gravity Generator Components[7]
Interior Plate[8]
Large Steel Tube[9]
Medical Components[10]
Metal Grids[11]
Motor[12]
Power Cells[13]
Radio-Communication Components[14]
Reactor Components[15]
Small Steel Tubes[16]
Solar Cells[17]
Steel Plate[18]
Super Conductor Conduits[19]
Thruster Components[20]
*/
0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;false

//Order of Refined Material//
/*
Cobalt Ingot [0]
Gold Ingot [1]
Gravel [2]
Iron Ingot [3]
Magnesium powder [4]
Nickel Ingot [5]
Platinum Ingot [6]
Scrap Metal [7]
Silicon Wafer [8]
Silver Ingot [9]
Uranium Ingot [10]
*/










stuff;T;GO;0,10