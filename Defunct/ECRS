//Experimental Coordinator : Receiving Side (ECRS)

// Block names
const string TXT_NAME="intel"
const string TIM_NAME="reaction"

//Block Variables
IMyTextPanel[] txt;
IMyLaserAntenna[] lsr;
IMyTimerBlock[] tim;
string intel;

void init(out IMyTextPanel[] txt_array , string[] txt_name,
		 out IMyLaserAntenna[] lsr_array , string[] lsr_name,
		 out IMyRemoteControl[] cntrl_array , string[] cntrl_name,
		 out IMyLargeGatlingTurret[] turret_array, string[] turret_name,
		 out IMyTerminalBlock[] term_array,string[] term_name
		 out IMyTimerBlock[] tim_array,string[] tim_name
		 out IMyThrust[] thrust_array,string[] thrust_name)
{



		if(txt_array != null){
			n = txt_array.Length;
			for (i=0,i <= n-1, i++){

				txt_array[i] = 
					GridTerminalSystem.GetBlockWithName(txt_name[i])
						 as IMyTextPanel;
			}
		}



				if(lsr_array != null){
			n = lsr_array.Length;
			for (i=0,i <= n-1, i++){

				lsr_array[i] = 
					GridTerminalSystem.GetBlockWithName(lsr_name[i])
						 as IMyLaserAntenna;
			}
		}


						if(cntrl_array != null){
			n = cntrl_array.Length;
			for (i=0,i <= n-1, i++){

				cntrl_array[i] = 
					GridTerminalSystem.GetBlockWithName(cntrl_name[i])
						 as IMyRemoteControl;
			}
		}

						if(turret_array != null){
			n = turret_array.Length;
			for (i=0,i <= n-1, i++){

				turret_array[i] = 
					GridTerminalSystem.GetBlockWithName(turret_name[i])
						 as IMyLargeGatlingTurret;
			}
		}

						if(term_array != null){
			n = term_array.Length;
			for (i=0,i <= n-1, i++){

				term_array[i] = 
					GridTerminalSystem.GetBlockWithName(term_name[i])
						 as IMyTerminalBlock;
			}
		}

						if(tim_array != null){
			n = tim_array.Length;
			for (i=0,i <= n-1, i++){

				tim_array[i] = 
					GridTerminalSystem.GetBlockWithName(tim_name[i])
						 as IMyTimerBlock;
			}
		}

						if(thrust_array != null){
			n = thrust_array.Length;
			for (i=0,i <= n-1, i++){

				thrust_array[i] = 
					GridTerminalSystem.GetBlockWithName(thrust_name[i])
						 as IMyThrust;
			}
		}

}

void save(string[] raw,string sep,IMyTextPanel txt){

	string Ref;
	int n;

	Ref = '';

	n = info.Length;



	for (i = 0 , i <= n-1, i++ ){

		Ref = Ref + raw[i];

	}

	txt.WritePublicText(String.Format('{0}',Ref);
}

string getintel(IMyLaserAntenna lsr){
	string output;

	output = lsr.DetailedInfo[48];

	return output;
}

string GetRaw(IMyTextPanel txt){

	string output;

	output=txt.GetPublicText();

	return output;
}

string[] GetRef(IMyTextPanel txt,String sep){

	string raw

	raw=GetRaw(txt);


	string [] output;

	string[] output =raw.Split(sep[0]);

}












void Main(string argument){

	init(txt,[TXT_NAME]
		,null,null
		,null,null
		,null,null
		,null,null
		,tim,[TIM_NAME]
		,null,null);

	Ref = GetRef(txt[0]);

lsr[0] = 
		GridTerminalSystem.GetBlockWithName(Ref[1])
			as IMyLaserAntenna;

intel = getintel(lsr[0]);

save(Ref[0]+[intel],'',txt[0])

}